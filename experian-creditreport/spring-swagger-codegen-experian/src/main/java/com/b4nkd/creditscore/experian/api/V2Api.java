/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.22).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.b4nkd.creditscore.experian.api;

import com.b4nkd.creditscore.experian.model.CreditProfileRequest;
import com.b4nkd.creditscore.experian.model.CreditProfileResponseForCP;
import com.b4nkd.creditscore.experian.model.ErrorResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-10-29T21:15:39.351011500Z[Europe/London]")
@Api(value = "v2", description = "the v2 API")
public interface V2Api {

    @ApiOperation(value = "Credit Report", nickname = "creditReports", notes = "Retrieves a credit profile with scores and addons requested. This is CR API Version 2.<br><br>We are providing non-executable \"Request schema\" which contains all request parameters and executable 10 test cases for client testing under \"Examples\" dropdown below which includes first 5 positive test cases and rest 5 negative test cases. Eg: Success_1, Failure_Invalid surname etc.", response = CreditProfileResponseForCP.class, authorizations = {
        @Authorization(value = "OauthSecurity", scopes = { 
            @AuthorizationScope(scope = "user", description = "user scope")
            })    }, tags={ "Consumer Services", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "API responds with a JSON.", response = CreditProfileResponseForCP.class),
        @ApiResponse(code = 400, message = "Client Exception due to invalid data.", response = ErrorResponse.class),
        @ApiResponse(code = 403, message = "Request Forbidden.", response = ErrorResponse.class),
        @ApiResponse(code = 404, message = "Not found Data.", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "Server Related Error.", response = ErrorResponse.class),
        @ApiResponse(code = 504, message = "Timeout.", response = ErrorResponse.class) })
    @RequestMapping(value = "/v2/credit-report",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<CreditProfileResponseForCP> creditReports(@ApiParam(value = "Input Request format" ,required=true, allowableValues="application/json", defaultValue="application/json") @RequestHeader(value="Content-Type", required=true) String contentType
,@ApiParam(value = "Consumer's PII , Requestor Information, Addons and any custom options to be specified here." ,required=true )  @Valid @RequestBody CreditProfileRequest body
,@ApiParam(value = "API client generated reference Id to uniquely identify the API request." , allowableValues="SBMYSQL", defaultValue="SBMYSQL") @RequestHeader(value="clientReferenceId", required=false) String clientReferenceId
,@ApiParam(value = "Output Response format" , allowableValues="application/json", defaultValue="application/json") @RequestHeader(value="Accept", required=false) String accept
);

}

